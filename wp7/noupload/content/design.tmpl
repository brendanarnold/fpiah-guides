{% extends base_template %}

{% block title %}
   App Design - Windows Phone Development for People in a Hurry
{% endblock %}

{% block h1 %}
    App Design for People in a Hurry
{% endblock %}

{% block body %}
  <h2>General tips</h2>

   <p>
    Best to use a Windows Phone to get a feel for the design, however here are some general tips,
   </p>
   <ul>
    <li>
     Some icons for the application bar are built into Blend, but there are also a great set of Creative Commons icons at
     <a href="http://modernuiicons.com/">
      Modern UI Icons
     </a>
    </li>
    <li>
     Design should focus on typography rather than chrome. Guideline minimum size for text is 13pt
    </li>
    <li>
     Absolute minimum border around touch activated UI elements should be 7px to avoid tapping the wrong element
    </li>
    <li>
     Data is sacred, if any action will cause data to be deleted/lost then prompt the user
    </li>
  </ul>

   <h2>Hub and Spoke navigation</h2>

  <ul>
      <li>
Below is the page layout for an example app. Arrows show where navigation buttons in the pages point
  <div style="margin: 15px 20px 0px 0px"><img src="images/hub_spoke.png" /></div>
      </li>
      <li>Hub and Spoke is a design principle that limits where the navigation buttons in your UI should point to ensure a good user experience</li>
      <li>
       Navigation occurs via a series of 'hubs', (e.g. Profiles, Orders) the primary hub being the home screen (e.g. Profiles)
      </li>
      <li>
       The user drills down along a 'spoke' using buttons in the UI and returning back to the hub using the physical back button on the phone
      </li>
      <li>
       Only allow navigation buttons in the UI to go deeper into the content, not back or across to another spoke (e.g. from Order Details to Add Order)
      </li>
      <li>
       To get to another spoke, user should back out to the common hub and then drill down the other path
      </li>
      <li>
       If you need to return as the result of a button press (e.g. saved a new profile), then activate the back button behaviour using,
       <pre><code>if (NavigationService.CanGoBack) NavigationService.GoBack();</code></pre>
      </li>
   </ul>
{% endblock %}

